->  use AnimalSelther: create a folder named "AnimalShelter"

->  show collections: shows what is inside of folder

->  db.dogs.insert(): add items to folder named "dogs"
    db.dogs.insert([{name:"Wyatt", breed:"Golden",age:14,catFriendly:true},{name:"Tonya" breed:"Chihuahua",age:17,catFriendly:true}])

->  db.dogs.insertOne(): add one item to folder named "dogs"
    db.dog.insertOne({name:"Charlie",age:3,breed:"corgi",catFriendly:true})

->  db.dogs.find(): shows what is inside of "dogs" folder and also can be specified 

->  db.dogs.findOne(): find one specified item what is inside of "dogs" folder

->   db.dogs.updateOne(): updates one item and can be add feature
     db.dogs.updateOne({name: "Charlie"},{$set: {age: 4}})

->   db.dogs.updateMany(): updates items and can be add features

->  db.cats.deleteOne(): deletes one item from collection
    db.cats.deleteOne({name: "Katty"})

->  db.cats.deleteMany(): delete items from collection

->  $eq     =   equal to specific value
->  $gt     =   greater than specific value
->  $gte    =   greater than or equal to specific value
->  $lt     =   less than specific value
->  $lte    =   less than or equal to specific value
->  $in     =   equal to specific value in array
->  $ne     =   not equal to specific value
->  $nin    =   not equal to specific value in array

->  $and    =   logiacal operator and
->  $or     =   logiacal operator or
->  $nor    =   logiacal operator nor
->  $not    =   logiacal operator not

->  Movie.find().then(data=>console.log(data))
        find() finds array as promises so we take data with .then() then return data from it
->  Movie.updateOne({title: 'Amedus'},{year:1984}).then(res=>console.log(res))
        updateOne() update items current element
        {title: 'Amedus'},{year:1984} : take "title: 'Amedus'" item and change "year: 1984"
->  Movie.updateMany({title: {$in: ['Amadeus', 'Stand by Me']}},{score: 9.4}).then(re=>console.log(res))
        updateMany() update items current elements
->  Movie.findOneAndUpdate({title: 'Amedus'},{year:1984},{new: true}).then(re=>console.log(res))
        updateOne() update items current element findOneAndUpdate returns a document 
        whereas updateOne does not (it just returns the _id if it has created a new document).
        new: true is option for taking new document
->  Movie.remove({title:'Amelie'}).then(msg=>console.log(msg))
        remove() removes item from databank
->  Movie.deleteMany({year: {$gte: 2000}}).then(msg=>console.log(msg))
        deleteMany() delete items from databank
->  Movie.findOneAndDelete({title: Alien}).then(m=>console.log(m))
        delete() delete item from databank and shows deleted item
->  
->  
->  
->  
->  
